---
variables:
  - &golang_image 'docker.io/golang:1.24'

when:
  - event: [ push , manual ]
    branch: ${CI_REPO_DEFAULT_BRANCH}
  - event: [ pull_request ]

workspace:
  base: /go

steps:
  inotify-info:
    image: *golang_image
    depends_on: [] # enable parallel steps
    commands:
      - git clone https://github.com/mikesart/inotify-info
      - cd inotify-info
      - make
      - _release/inotify-info
  build:
    image: *golang_image
    depends_on: [] # enable parallel steps
    commands:
      - export GIT_COMMIT=`git rev-parse --short HEAD`
      - export VERSION=`git describe --always`
      - export GO_VERSION=`go version | awk '{print $$3}'`
      - export BUILD_DATE=`date +%FT%T%z`
      - export BUILD_FLAGS="-X main.gitCommit=$GIT_COMMIT -X main.version=$VERSION -X main.goVersion=$GO_VERSION -X main.buildDate=$BUILD_DATE"
      - go generate ./...
      - go build -ldflags "$BUILD_FLAGS" -o ./cmd/revad/revad ./cmd/revad
      - go build -ldflags "$BUILD_FLAGS" -o ./cmd/reva/reva ./cmd/reva
  test:
    image: *golang_image
    depends_on: [ build ]
    commands:
      - apt-get update -qq && apt-get install -y inotify-tools 
      - go test -coverprofile coverage.out -race $$(go list ./... | grep -v /tests/integration | grep -v /tests/benchmark)
  test-integration:
    image: *golang_image
    depends_on: [ build ]
    commands:
      - go test -race ./tests/integration/grpc
  test-benchmark:
    image: *golang_image
    depends_on: [ build ]
    commands:
      - make test-benchmark